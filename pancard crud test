package entity;

import java.time.LocalDate;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

@Entity
@Table(name="emp_tbl")
public class Employee
{

	@Id
	@Column(name="emp_no")
	private int empNo;
	
	@Column(name="emp_name")
	private String empName;
	
	@Column(name="emp_job")
	private String empJob;
	
	@Column(name="emp_joindate")
	private LocalDate empJoinDate;
	
	@Column(name="emp_sal")
	private double empSal;
	
	@Column(name="emp_age")
	private int empAge;

	@OneToOne
	private PanCard pan;
		
	public PanCard getPan() {
		return pan;
	}

	public void setPan(PanCard pan) {
		this.pan = pan;
	}
	
	public Employee()
	{
		super();
		System.out.println("Employee cons called...........");
	}
	
	public Employee(int empNo, String empName, String empJob, LocalDate empJoinDate, double empSal, int empAge) {
		super();
		this.empNo = empNo;
		this.empName = empName;
		this.empJob = empJob;
		this.empJoinDate = empJoinDate;
		this.empSal = empSal;
		this.empAge = empAge;
	}

	public int getEmpNo() {
		return empNo;
	}

	public void setEmpNo(int empNo) {
		this.empNo = empNo;
	}

	public String getEmpName() {
		return empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	public String getEmpJob() {
		return empJob;
	}

	public void setEmpJob(String empJob) {
		this.empJob = empJob;
	}

	public LocalDate getEmpJoinDate() {
		return empJoinDate;
	}

	public void setEmpJoinDate(LocalDate empJoinDate) {
		this.empJoinDate = empJoinDate;
	}

	public double getEmpSal() {
		return empSal;
	}

	public void setEmpSal(double empSal) {
		this.empSal = empSal;
	}

	public int getEmpAge() {
		return empAge;
	}

	public void setEmpAge(int empAge) {
		this.empAge = empAge;
	}
	
	
}
-----------------------------------------------------------------------------------------------------------------------------
package entity;
import java.time.LocalDate;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

@Entity
@Table(name="pan_tbl")
public class PanCard {
	@Id
	@Column(name="pan_no")
	private String panNo;
	
	@Column(name="pan_name")
	private String panName;
	
	@Column(name="pan_dob")
	private LocalDate panDob;
	
	@OneToOne
	private Employee emp;
	
	
	public Employee getEmp() {
		return emp;
	}

	public void setEmp(Employee emp) {
		this.emp = emp;
	}
	
	public PanCard()
	{
		super();
		System.out.println("Pancard cons called...........");

	}

	public PanCard(String panNo, String panName, LocalDate panDob) {
		super();
		this.panNo = panNo;
		this.panName = panName;
		this.panDob = panDob;
	}

	public String getPanNo() {
		return panNo;
	}

	public void setPanNo(String panNo) {
		this.panNo = panNo;
	}

	public String getPanName() {
		return panName;
	}

	public void setPanName(String panName) {
		this.panName = panName;
	}

	public LocalDate getPanDob() {
		return panDob;
	}

	public void setPanDob(LocalDate panDob) {
		this.panDob = panDob;
	}
	
	
}
-------------------------crud test=----------------------------------------------------------------
import java.time.LocalDate;

import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

import org.junit.Test;

import entity.Employee;
import entity.PanCard;

public class CrudTestingOneToOne
{
	EntityManagerFactory emf;
	EntityManager em;
	
	public CrudTestingOneToOne()
	{
		System.out.println("Employee-Pan OneToOne Tetsing...");
		
		System.out.println("Trying to read persistence.xml file...");
		
		this.emf = Persistence.createEntityManagerFactory("MyJPA");
		System.out.println("EntityManagerFactory created....");
			
		this.em = emf.createEntityManager();
		System.out.println("EntityManager created...."); 
	}
	
	@Test
	public void createNewEmployeeWithNewPanTest()
	{
		Employee empObj1 = new Employee(101, "Saritha","sales",LocalDate.of(2013, 1, 28),30000,23);
		Employee empObj2 = new Employee(102, "haritha","marketing",LocalDate.of(2014, 2, 22),23000,33);
		Employee empObj3 = new Employee(103, "Harisha","health",LocalDate.of(2016, 9, 8),35000,27);
		
		PanCard panObj1 = new PanCard("AXHPR6875J", "saritha",LocalDate.of(2015, 5, 23));
		PanCard panObj2 = new PanCard("MUTYR5673U", "Harisha",LocalDate.of(2013, 9, 30));
		
		panObj1.setEmp(empObj1);
		panObj1.setEmp(empObj2);
		panObj1.setEmp(empObj3);
		
		empObj1.setPan(panObj1);
		empObj2.setPan(panObj2);
		
		EntityTransaction et = em.getTransaction();
		et.begin();
			em.persist(empObj1);
			em.persist(empObj2);
			em.persist(empObj3);
			em.persist(panObj1);
			em.persist(panObj2);
		et.commit();
		
		
		
	}
	
	@Test
	public void addNewPanCardWithoutAnEmployee() {
		PanCard panObj1 = new PanCard("HYUOJ3456R", "Sumitha", LocalDate.of(2009, 5, 23));
		EntityTransaction tx = em.getTransaction();
		tx.begin();
			em.persist(panObj1);
		tx.commit();
	}
}
